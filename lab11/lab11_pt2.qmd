---
title: "lab11 - AlphaFold"
author: "Karina Cardenas, A16742606"
format: html
toc: true
---

## Generating your own structure predictions 

Here we read the results from AlphaFold and try to interpert all the models and quality score metrics. 

```{r}
library(bio3d)

pth <- "dimer_23119/"

pdb.files <- list.files(path = pth, full.names = TRUE, pattern = ".pdb")
```

```{r}
file.exists(pdb.files)
```

```{r}
pdbs <- pdbaln(pdb.files, fit = TRUE, exefile="msa")
```

```{r}
library(bio3dview)
view.pdbs(pdbs)
```

```{r}
plot(pdbs$b[1,], typ = "l", ylim = c(0,100), ylab = "plDDT score")

lines(pdbs$b[2,], typ = "l", col = "yellow")

lines(pdbs$b[3,], typ = "l", col = "green")

lines(pdbs$b[4,], typ = "l", col = "blue")

lines(pdbs$b[5,], typ = "l", col = "red")

```

Alpha fold returns it's large alignment file used for analysis. Here we read this file and score conversation per position. 
```{r}
aln_file <- list.files(path=pth,
                       pattern=".a3m$",
                        full.names = TRUE)
aln_file
```

```{r}
aln <- read.fasta(aln_file[1], to.upper = TRUE)
```

We can score residue conservation in the alignment with the conserv() function.

```{r}
sim <- conserv(aln)
```


```{r}
plotb3(sim[1:99])
       ylab="Conservation Score"
```

Find the consensus sequence 
```{r}
con <- consensus(aln, cutoff = 0.9)
con$seq
```

## Predicted alignment Error for Domains 

```{r}
library(jsonlite)

# Listing of all PAE JSON files
pae_files <- list.files(path=pth,
                        pattern=".*model.*\\.json",
                        full.names = TRUE)
```

```{r}
pae1 <- read_json(pae_files[1],simplifyVector = TRUE)
pae5 <- read_json(pae_files[5],simplifyVector = TRUE)

attributes(pae1)
```

```{r}
head(pae1$plddt) 
```

```{r}
plot.dmat(pae1$pae, 
          xlab="Residue Position (i)",
          ylab="Residue Position (j)")
```

```{r}
plot.dmat(pae5$pae, 
          xlab="Residue Position (i)",
          ylab="Residue Position (j)",
          grid.col = "black",
          zlim=c(0,30))
```

```{r}
plot.dmat(pae1$pae, 
          xlab="Residue Position (i)",
          ylab="Residue Position (j)",
          grid.col = "black",
          zlim=c(0,30))
```

```{r}
rd <- rmsd(pdbs, fit=T)
rd
```

```{r}
library(pheatmap)

colnames(rd) <- paste0("m",1:5)
rownames(rd) <- paste0("m",1:5)
pheatmap(rd)
```

